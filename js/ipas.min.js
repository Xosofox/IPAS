var AttackDamageView=Backbone.View.extend({model:Attack,initialize:function(){_.bindAll(this,"render"),paper.setStart(),this.dmgViews=[];for(var a=0;8>a;a++){var b=paper.text(40,20*a,"0%");b.attr("font-size","16pt"),b.attr("fill","#e00"),this.dmgViews[a]=b}this.dmgViewElements=paper.setFinish(),this.dmgViewElements.attr("opacity",0)},setModel:function(a){this.model=a},render:function(){this.dmgViewElements.stop(),_.each(resonatorViews,function(a,b){var c=xyForResoDistance(a.model.get("distanceToPortal")+8,directions[b]),d=Math.round(1e3*this.model.attributes.damagePerResonator[b].percent)/10;d>0?this.dmgViews[b].attr("x",c.x).attr("y",c.y).attr("text",d+"%").attr("opacity",1):this.dmgViews[b].attr("opacity",0)},this);var a=Raphael.animation({opacity:0},400);this.dmgViewElements.animate(a.delay(3e3))}}),AttackInfoView=Backbone.View.extend({events:{mouseover:"showPosition",mouseout:"hidePosition"},showPosition:function(){playerView.model.set({x:this.model.get("x"),y:this.model.get("y")}),playerView.render(),attackDamageView.setModel(this.model),attackDamageView.render()},hidePosition:function(){playerView.hide()},render:function(){var a=this.model.get("level"),b="";b+='<span style="color: '+level_color[a]+'">L'+a+"</span> ";var c=this.model.get("damageTotal"),d=this.model.get("energyPortal"),e=this.model.get("energyPortalMax"),f=Math.round(d/e*1e3)/10;return b+="Dmg: "+Math.round(c/1e3*10)/10+"K, Portal: "+Math.round(d/1e3*10)/10+"K/"+e/1e3+"K ("+f+"%)",this.$el.html(b),this}}),AttackListView=Backbone.View.extend({initialize:function(){_.bindAll(this,"addOne","render"),this.listenTo(this.collection,"add",this.addOne),this.listenTo(this.collection,"reset",this.render)},addOne:function(a){var b=new AttackInfoView({model:a});this.$el.append(b.render().el)},render:function(){this.$el.html(""),this.collection.each(function(a){this.addOne(a)})}}),AttackSetupView=Backbone.View.extend({model:AttackSetup,initialize:function(){this.listenTo(this.model,"change",this.render);var a="";a+='Select Burster: <select id="bursterlevel" class="bursterSelector" name="burster">';for(var b=1;8>=b;b++)a+='<option value="'+b+'">Burster Level '+b+"</option>";a+="</select><br />",a+='Select Formula: <select id="damageformula" class="formulaSelector" name="formula">',_.each(DAMAGE_FUNCTIONS,function(b,c){a+='<option value="'+c+'">'+b.title+"</option>"}),a+="</select> ",a+='<span id="dmggraph">-</span><br />',a+='<a id="formulasource" href="">... as seen here</a><br />',a+='<input type="checkbox" id="heatmapcheck"><label for="heatmapcheck">Show heatmap (takes time!!!)</label>',this.$el.html(a);var c=this.model.get("formula");$("#damageformula",this.el).val(c),$("#formulasource").attr("href",DAMAGE_FUNCTIONS[c].url),this.updateSparkline()},events:{"change .bursterSelector":"attacklevel","change .formulaSelector":"attackformula","change #heatmapcheck":"heatmap"},heatmap:function(a){var b=$(a.currentTarget).is(":checked");this.model.set("heatmap",b)},attacklevel:function(a){var b=$(a.currentTarget).val();this.model.set("level",b),$("#bursterlevel").val(b),this.updateSparkline()},attackformula:function(a){var b=$(a.currentTarget).val();this.model.set("formula",b),$("#damageformula").val(b),$("#formulasource").attr("href",DAMAGE_FUNCTIONS[b].url),this.updateSparkline()},updateSparkline:function(){for(var a=[],b=this.model.get("formula"),c=this.model.get("level"),d=burster_range[c-1],e=burster_damage[c-1],f=DAMAGE_FUNCTIONS[b].func,g=0;d>g;g++)a.push([g,f(g,d,e,c)]);$("#dmggraph").sparkline(a,{width:150})},render:function(){}}),AttackSummaryView=Backbone.View.extend({initialize:function(){_.bindAll(this,"render"),this.listenTo(this.collection,"add change reset",this.render),this.render()},events:{"click .reset":"reset"},render:function(){for(var a=[],b=0;8>b;b++)a[b]=0;_.each(this.collection.pluck("level"),function(b){a[b-1]++});for(var c=[],b=0;8>b;b++){var d=a[b];d>0&&c.push(d+'x <span style="color:'+level_color[b+1]+'">L'+(b+1)+"</span>")}this.$el.html(c.join(", ")+' <span style="cursor: pointer" class="reset">Reset</span>'),c.length>0&&this.$el.append('<br />Firing Cost: <span id="bursterCostXM">'+this.collection.bursterCost()+" XM</span>")},reset:function(){this.collection.reset(),portal.reset()}}),BursterRangeView=Backbone.View.extend({initialize:function(){_.bindAll(this,"render","show","hide"),this.raphael=paper.circle(0,0,mInPx(42)).hide(),border.mouseover(this.show),border.mouseout(this.hide),border.mousemove(this.render),this.listenTo(attackSetup,"change level",this.range)},range:function(){var a=attackSetup.get("level");this.raphael.attr("r",mInPx(burster_range[a-1]))},hide:function(){this.raphael.hide()},show:function(){this.raphael.show()},render:function(){var a=position.get("x"),b=position.get("y");this.raphael.attr({cx:a,cy:b})}}),DamageHeatMapView=Backbone.View.extend({model:AttackSetup,collection:AttackCollection,initialize:function(){_.bindAll(this,"render","createDataset"),this.listenTo(this.model,"change",this.check),this.listenTo(attacks,"add",this.check)},check:function(){this.model.get("heatmap")?setTimeout(this.render,0):this.$el.hide()},createDataset:function(){for(var a=this.model.get("level"),b=0;height>=b;b+=9)for(var c=b%18==0?0:5;width>=c;c+=10){var d=new Attack({x:c,y:b,level:a,simulate:!0,show:!1});d.calculate(),this.collection.add(d)}var e=[],f=0,g=1e5;this.collection.each(function(a){var b=(a.get("level"),a.get("damageTotal")),c=a.get("x"),d=a.get("y");f=Math.max(f,b),g=Math.min(g,b),e.push({x:c,y:d,count:b})}),this.collection.each(function(a,b){e[b].count-=g});var h={max:f-g,data:e};return h},render:function(){this.$el.html("").show(),this.collection.reset();var a={element:this.el,radius:6,gradient:{.35:"rgb(0,0,255)",.5:"rgb(0,255,0)",.6:"yellow",.7:"rgb(255,100,0)",.75:"rgb(255,0,0)",1:"rgb(255,0,0)"},opacity:50},b=h337.create(a),c=this.createDataset();b.store.setDataSet(c)}}),LinkInfoView=Backbone.View.extend({tagName:"div",className:"linkInfo",collection:LinkCollection,initialize:function(){this.listenTo(this.collection,"add remove change",this.render),this.template=_.template(LinkTemplate),this.$el.html(this.template()),this.render()},events:{"click .inLink-up":"incIncomingLinks","click .inLink-down":"decIncomingLinks","click .outLink-up":"incOutgoingLinks","click .outLink-down":"decOutgoingLinks"},incIncomingLinks:function(){this.collection.add(new Link(-1))},decIncomingLinks:function(){if(this.collection.countIncoming()>0){var a=this.collection.getIncoming(),b=a[0];this.collection.remove(b)}},incOutgoingLinks:function(){this.collection.countOutgoing()<8&&this.collection.add(new Link(1))},decOutgoingLinks:function(){if(this.collection.countOutgoing()>0){var a=this.collection.getOutgoing(),b=a[0];this.collection.remove(b)}},render:function(){return $("#numLinksIncoming").text(this.collection.countIncoming()),$("#numLinksOutgoing").text(this.collection.countOutgoing()+"/8"),$("#linkMitigation").text(this.collection.linkMitigation()),this}}),LinkTemplate='Number of links:    <div style="position: relative; height: 40px; margin-bottom: 10px">        <div style="position: absolute">Incoming:</div>        <div style="position: absolute; left: 80px" id="numLinksIncoming">0</div>        <div style="width: 15px; position: absolute; left: 95px">            <div class="arrow-up inLink-up" title="One more incoming link"></div>            <div class="arrow-down inLink-down" title="One less incoming link"></div>        </div>        <div style="position: absolute; left: 140px">Outgoing:</div>        <div style="position: absolute; left: 210px" id="numLinksOutgoing">0/8</div>        <div style="width: 15px; position: absolute; left: 235px">            <div class="arrow-up outLink-up" title="One more outgoing link"></div>            <div class="arrow-down outLink-down" title="One less outgoing link"></div>        </div>        <br />    Link mitigation: <span id="linkMitigation">0</span><br />    </div>',ModList=Backbone.View.extend({collection:ModCollection,initialize:function(){this.listenTo(this.collection,"change",this.render),this.render()},events:{},render:function(){var a=$("<tr></tr>");this.collection.each(function(b){var c=new ModView({model:b});c.render(),a.append(c.el)}),this.$el.html(a),$("#modMitigation").text(this.collection.modMitigation())}}),ModView=Backbone.View.extend({tagName:"td",className:"modInfoCell",model:Mod,initialize:function(){this.template=_.template(ModTemplate)},events:{click:"cycle"},cycle:function(){this.model.cycle()},render:function(){var a=this.model.toJSON;return a.title=MOD_TYPES[this.model.get("modType")],"-"!=this.model.get("modType")&&(a.title+=" ("+MOD_RARITIES[this.model.get("rarity")]+")"),a.color=MOD_RARITY_COLOR[this.model.get("rarity")],this.$el.html(this.template(a)),this}}),ModTemplate='<td align="center" style="height: 60px; width: 60px; border: 1px solid white">        <span style="font-size: 8pt; color: <%- color %>"><%- title %></span></td>        ',PlayerView=Backbone.View.extend({model:Player,initialize:function(){_.bindAll(this,"render","show","hide"),this.width=28,this.height=34,this.raphael=paper.image("images/player.png",0,0,this.width,this.height),this.offsetX=this.width/2,this.offsetY=this.height/2,this.hide()},hide:function(){this.raphael.hide()},show:function(){this.raphael.show()},render:function(){var a=this.model.get("x")-this.offsetX,b=this.model.get("y")-this.offsetY;this.raphael.animate({x:a,y:b}).show().toFront()}}),PortalInfoView=Backbone.View.extend({model:Portal,initialize:function(){this.listenTo(this.model,"change",this.render);var a="";a+='<span id="portallevel" style="font-size: 14pt; color: #fff">0</span><br />',a+='Preconfigure Resos: <select id="preset" class="presetSelect" name="preset">',_.each(PRESETS,function(b,c){a+='<option value="'+c+'">'+b.title+"</option>"}),a+="</select><br />",a+='<label for="decay">Decayed (<span id="decayDays">0</span> days)</label><br />',a+='<input type="range" step="1" min="0" max="7" id="decay" class="decaySelector" value="0" /><br />',a+='<label for="equidistant">All resos same distance:</label> <input type="checkbox" id="equidistant" checked="checked"><br />',a+='<label for="lockresos">Lock reso positions:</label> <input type="checkbox" id="lockresos"><br />',this.$el.html(a),this.portallevel=$("#portallevel",this.$el),this.render()},events:{"change .presetSelect":"preconfigure","change .decaySelector":"decay","change #equidistant":"switchEquidistant","change #lockresos":"switchLockresos"},preconfigure:function(a){var b=$(a.currentTarget).val();this.model.applyPreset(b)},decay:function(a){days=$(a.currentTarget).val(),$("#decayDays").text(days),this.model.set("decayDays",days).decay()},switchEquidistant:function(){EQUIDISTANT=!EQUIDISTANT},switchLockresos:function(a){var b=$(a.currentTarget).is(":checked");b?portalElements.toBack():portalElements.toFront()},render:function(){var a=this.model.get("level");this.portallevel.text(a).css("color",level_color[a])}}),PortalStatsView=Backbone.View.extend({model:Portal,initialize:function(){this.listenTo(this.model,"change",this.render),this.listenTo(this.model.mods,"add remove change",this.render),this.listenTo(this.model.links,"add remove change",this.render),this.template=_.template(PortalStatsTemplate),this.$el.html(this.template()),this.render()},render:function(){var a=this.model.totalMitigation(),b=a;95==a&&(b+=" (max)"),$("#totalMitigation").text(b),$("#portalRange").text(this.model.portalRangeText())}}),PortalStatsTemplate='    Total mitigation: <span id="totalMitigation">0</span><br />    Supported link length: <span id="portalRange">0</span><br />',PredictionSetupView=Backbone.View.extend({model:Prediction,initialize:function(){var a="";a+='<input type="checkbox" id="predictioncheck"><label for="predictioncheck">Predict damage % while hovering</label>',a+="<br />",this.$el.html(a),_.bindAll(this,"switchprediction","predictDamage");var b=this;border.mouseover(function(){b.model.get("state")&&(b.interval=setInterval(b.predictDamage,200))}),border.mouseout(function(){b.interval&&clearInterval(b.interval)})},events:{"change #predictioncheck":"switchprediction"},switchprediction:function(a){var b=$(a.currentTarget).is(":checked");this.model.set("state",b)},predictDamage:function(){var a=position.get("x"),b=position.get("y");this.predictedAttack=new Attack({x:a,y:b,level:attackSetup.get("level"),simulate:!0}),this.predictedAttack.attack()}}),ResonatorDetailList=Backbone.View.extend({initialize:function(){this.render(),this.listenTo(portal,"change:rechargeXMused change:totalRechargeXMused",this.showRechargeXM),this.listenTo(portal.mods,"change",this.showDeployCost),this.listenTo(portal.resonators,"change",this.showDeployCost)},collection:ResonatorCollection,events:{"click #recharge":"portalrecharge"},portalrecharge:function(){portal.recharge()},showRechargeXM:function(){$("#rechargeXMused").text(Math.round(portal.get("rechargeXMused"))),$("#totalRechargeXMused").text(Math.round(portal.get("totalRechargeXMused")))},showDeployCost:function(){$("#deployCostXM").text(portal.deployCost())},render:function(){var a,b=this;_.each([2,1,3,0,4,7,5,6],function(c,d){var e=b.collection.at(c);d%2==0&&(a=$("<tr></tr>"),b.$el.append(a));var f=new ResonatorDetailView({model:e,position:directions[c]});f.render(),a.append(f.el)}),this.$el.append('<tr><td colspan="2">Deploy cost: <span id="deployCostXM">'+portal.deployCost()+"</span> XM</td></tr>"),this.$el.append('<tr><td colspan="2"><input type="button" value="Recharge" id="recharge">XM (last/total): <span id="rechargeXMused">0</span>/<span id="totalRechargeXMused">0</span></td></tr>')}}),ResonatorDetailView=Backbone.View.extend({tagName:"td",className:"resoInfoCell",model:Resonator,position:"N",initialize:function(){this.listenTo(this.model,"change",this.render),this.template=_.template(ResonatorDetailViewTemplate)},events:{"click .level-up":"incLevel","click .level-down":"decLevel","click .distance-up":"incDist","click .distance-down":"decDist","mouseover .resoLevel":"highlight","mouseout .resoLevel":"unhighlight"},incLevel:function(){var a=this.model.get("level");8>a&&this.model.set({level:a+1,energyTotal:1}),portal.commit()},decLevel:function(){var a=this.model.get("level");return 0>=a?!1:(1==a?(this.model.set("energyTotal",0),this.model.set("level",0)):this.model.set("level",a-1),void portal.commit())},incDist:function(){var a=this.model.get("distanceToPortal");40>a&&(a++,EQUIDISTANT?resonators.invoke("set",{distanceToPortal:a}):this.model.set("distanceToPortal",a))},decDist:function(){var a=this.model.get("distanceToPortal");a>1&&(a--,EQUIDISTANT?resonators.invoke("set",{distanceToPortal:a}):this.model.set("distanceToPortal",a))},highlight:function(){this.model.set("highlight",!0)},unhighlight:function(){this.model.set("highlight",!1)},render:function(){var a=this.model.get("level"),b=this.model.getPercentage();0>=b&&(b=.1);var c=this.model.toJSON();return c.perc=b,c.levelcolor=level_color[a],c.highlightclass=this.model.get("highlight")?"highlight":"",this.$el.html(this.template(c)),this}}),ResonatorDetailViewTemplate='        <div class="resoInfo <%- highlightclass  %>" style="position: relative; height: 30px; margin: 2px">            <div class="resoLevel" style="position: absolute; left: 0px; width: 60px; border: 1px solid gray">                <span style="width: <%- perc %>%; background-color: <%- levelcolor %>; display: block" >&nbsp;</span>            </div>            <div style="position: absolute; left:27px ; top:0; z-index: 20; color: <% if (level <3) { %>#000000<% } else { %>white<% } %>"><%- level %></div>            <div style="position: absolute; left: 65px">                <div class="arrow-up level-up" title="Level up"></div>                <div class="arrow-down level-down" title="Level down"></div>            </div>            <div style="position: absolute; left:92px" class="distance"><%- distanceToPortal %>m</div>            <div style="position: absolute; left: 123px">                <div class="arrow-up distance-up" title="Distance up"></div>                <div class="arrow-down distance-down" title="Distance down"></div>            </div>        </div>        ',ResonatorView=Backbone.View.extend({model:Resonator,initialize:function(){this.raphaElement=paper.circle(portalX,portalY,RESO_RADIUS),this.raphaElementTxt=paper.text(portalX,portalY,"1").attr("pointer-events","none"),this.raphaElement.drag(function(a,b){var c=this.raphaElement;c.cx=c.ox+a,c.cy=c.oy+b},function(){var a=this.raphaElement;a.ox=a.attr("cx"),a.oy=a.attr("cy");var b=this;this.dragInterval=setInterval(function(){if("undefined"!=typeof a.cx){var c=Math.round(distanceToPortalForXY(a.cx,a.cy));c=c>MAX_RESO_RANGE?MAX_RESO_RANGE:c,EQUIDISTANT?resonators.invoke("set",{distanceToPortal:c}):b.model.set("distanceToPortal",c),portal.commit()}},100)},function(){clearInterval(this.dragInterval)},this,this,this),this.setElement(this.raphaElement.node),this.delegateEvents(this.events),this.listenTo(this.model,"change",this.render)},events:{},render:function(){if(this.model.get("highlight")?this.raphaElement.attr("r",2*RESO_RADIUS):this.raphaElement.attr("r",RESO_RADIUS),this.model.get("energyTotal")<=0)this.raphaElement.hide(),this.raphaElementTxt.hide();else{this.raphaElement.show(),this.raphaElementTxt.show();var a=xyForResoDistance(this.model.get("distanceToPortal"),this.options.position),b=this.model.get("level");this.raphaElement.animate({cx:a.x,cy:a.y,fill:level_color[b],text:b}).toFront(),this.raphaElementTxt.animate({x:a.x,y:a.y}).attr("text",b).toFront()}return this}}),Attack=Backbone.Model.extend({defaults:{x:0,y:0,level:1,damageTotal:0,simulate:!1,show:!0,damagePerResonator:[],energyPortal:0,energyPortalMax:0},initialize:function(){_.bindAll(this,"calculate","attack")},attack:function(){this.calculate()},calculate:function(){var a=this,b=[];this.set("damagePerResonator",b);var c=attackSetup.get("formula");_.each(resonatorViews,function(d,e){var f=a.get("level"),g=d.model.get("energyTotal"),h=Math.sqrt(Math.pow(a.get("x")-d.raphaElement.attr("cx"),2)+Math.pow(a.get("y")-d.raphaElement.attr("cy"),2)),i=pixInM(h),j=burster_range[f-1],k=burster_damage[f-1],l=DAMAGE_FUNCTIONS[c].func(i,j,k,f);l=portal.applyMitigation(l),g=d.model.get("energyTotal"),g>0?g>l?g-=l:(l=g,g=0):l=0;var m=reso_capacity[d.model.get("level")];b[e]={},b[e].damage=l,b[e].percent=l/m,a.attributes.damageTotal+=l,a.attributes.energyPortal+=g,a.attributes.energyPortalMax+=m}),this.get("simulate")||this.doDamage(),this.get("show")&&(attackDamageView.setModel(this),attackDamageView.render())},doDamage:function(){var a=this.get("damagePerResonator");_.each(resonatorViews,function(b,c){var d=b.model.get("energyTotal"),e=a[c].damage;d>0&&a[c].damage>0&&b.model.set("energyTotal",d-e)})}}),AttackCollection=Backbone.Collection.extend({model:Attack,bursterCost:function(){var a=0;return this.each(function(b){var c=b.get("level");a+=burster_cost[c-1]}),a}}),AttackSetup=Backbone.Model.extend({defaults:{level:1,formula:"graphracer",predict:!1,heatmap:!1}}),Hit=Backbone.Model.extend({defaults:{level:0,critical_hit:!1,distance:40,target_destroyed:!1,damage:0,energy:3e3,portal_mitigation:[]},getTotalMitigation:function(){for(var a=0,b=this.get("portal_mitigation"),c=0;4>c;c++)m=b[c],null===m&&(m=0),a+=m;return a}}),HitCollection=Backbone.Collection.extend({model:Hit}),Link=Backbone.Model.extend({defaults:{distance:1,active:!0,isOrigin:!0},initialize:function(a){this.set("distance",a),0>a&&this.set("isOrigin",!1)}}),LinkCollection=Backbone.Collection.extend({model:Link,initialize:function(){_.bindAll(this,"linkMitigation")},checkLinkSupport:function(){var a=portal.countResos(),b=portal.portalRange();return this.each(function(c){a>=3&&c.get("distance")<b?c.set("active",!0):c.set("active",!1)}),this},linkMitigation:function(){return Math.round(4/9*Math.atan((this.countIncoming()+this.countOutgoing())/Math.E)*100)},getHash:function(){return this.pluck("distance").join(",")},getIncoming:function(){var a=this.filter(function(a){return a.get("distance")<0&&a.get("active")});return a},countIncoming:function(){return this.getIncoming().length},getOutgoing:function(){return this.filter(function(a){return a.get("distance")>0&&a.get("active")})},countOutgoing:function(){return this.getOutgoing().length}}),Mod=Backbone.Model.extend({defaults:{modCode:"-",mitigation:0,modType:"-",rarity:"-"},initialize:function(a){"undefined"!=typeof a&&(a="-"),this.setModCode(a)},cycle:function(){var a=_.indexOf(MODS_AVAILABLE,this.get("modCode"));a++,a%=MODS_AVAILABLE.length;var b=MODS_AVAILABLE[a];"s"!=b.charAt(0)&&(b="-"),this.setModCode(b)},setModCode:function(a){if(this.set("modCode",a),"-"==a)this.set({mitigation:0,modType:"-",rarity:"-"});else{var b=a.charAt(0),c=a.charAt(1),d=0;"s"==b&&(d=parseInt(a.substr(2),10)),this.set({mitigation:d,modType:b,rarity:c})}},getDeployCost:function(){return MOD_DEPLOY_COST[this.get("rarity")]}}),ModCollection=Backbone.Collection.extend({model:Mod,initialize:function(){_.bindAll(this,"mitigations","modMitigation");for(var a=0;4>a;a++)this.add({})},mitigations:function(){return this.pluck("mitigation")},modMitigation:function(){for(var a=0,b=this.mitigations(),c=0;4>c;c++)a+=b[c];return a},getHash:function(){return this.pluck("modCode").join(",")}}),Optimizer=Backbone.Model.extend({defaults:{x:0,y:0,matrix:{}},optimize:function(){},getDamage:function(){},setDamage:function(){},calculateSurroundings:function(){},show:function(){player.set({x:this.get("x"),y:this.get("y")}),playerView.show()}}),Player=Backbone.Model.extend({defaults:{x:0,y:0}}),Portal=Backbone.Model.extend({resonators:{},mods:{},links:{},level:{},defaults:{decayDays:0,level:1,exactlevel:1,rechargeXMused:-1,totalRechargeXMused:0},initialize:function(){_.bindAll(this,"reposition","applyPreset","saveConfig","reset","recharge","fill","applyMitigation","portalRange"),this.set("resonators",new ResonatorCollection),this.set("mods",new ModCollection),this.set("links",new LinkCollection),this.resonators=this.get("resonators"),this.mods=this.get("mods"),this.links=this.get("links"),this.listenTo(this.resonators,"add change",this.reposition),this.saveConfig()},reposition:function(){var a=0,b=this.resonators.filter(function(a){return a.get("energyTotal")>0});_.each(b,function(b){a+=b.get("level")}),a/=8,this.set("exactlevel",a),this.set("level",a>=1?Math.floor(a):1),this.links.checkLinkSupport()},decay:function(){this.reset();var a=this.get("decayDays"),b=DECAY_RATE*a;this.resonators.each(function(a){a.set("energyTotal",a.get("energyTotal")-a.getMaxEnergy()*b)})},applyPreset:function(a){if(a in PRESETS){var b=PRESETS[a],c=b.resonators;this.resonators.each(function(a,b){a.set(c[b])})}else alert("Could not find preset "+a);this.commit()},loadFromConfigHash:function(a){var b;a.indexOf("|")>=0?(alert("Looks like you are using an old version of the IITC IPAS plugin - please make sure to update your user scripts to use the full functionality, including link mitigation and new mods"),b=a.split("|"),b[2]=""):b=a.split("/");var c=b[0],d=b[1],e=b[2],f={c:"sc10",r:"sr20",v:"sv30",cs10:"sc10",rs20:"sr20",vrs30:"sv30"},g=c.split(";");_.each(g,function(a,b){var c=a.split(",");resonators.at(b).set({level:parseInt(c[0],10),distanceToPortal:parseInt(c[1],10),energyTotal:parseInt(c[2],10)})});var h=d.split(",");if(_.each(h,function(a,b){a="0"===a?"-":a,a in f&&(a=f[a]),this.mods.at(b).setModCode(a)},this),e){var i=e.split(",");this.links.reset(),_.each(i,function(a){this.links.add(new Link(a))},this)}this.saveConfig()},getConfigHash:function(){var a=[];return this.resonators.each(function(b){a.push(b.get("level")+","+b.get("distanceToPortal")+","+b.get("energyTotal"))}),a.join(";")+"/"+this.get("mods").getHash()+"/"+this.get("links").getHash()},saveConfig:function(){this.set("config",this.getConfigHash())},countResos:function(){return _.reduce(this.resonators.pluck("energyTotal"),function(a,b){return b>0&&a++,a},0)},fill:function(){this.resonators.each(function(a){a.get("energyTotal")>0&&a.set("energyTotal",a.getMaxEnergy())})},commit:function(){this.fill(),this.saveConfig(),this.decay()},recharge:function(){var a=[];this.resonators.each(function(b,c){b.needsEnergy()&&a.push(c)});var b=0;if(a.length>0){var c=Math.round(1e3/a.length);_.each(a,function(a){b+=this.resonators.at(a).charge(c)})}else b=1e3;var d=1e3-b;this.set("rechargeXMused",d);var e=this.get("totalRechargeXMused");e+=d;var e=this.set("totalRechargeXMused",e)},deployCost:function(){var a=0;return this.resonators.each(function(b){var c=b.get("level");c>=1&&(a+=reso_deploy_cost[c-1])}),this.mods.each(function(b){a+=b.getDeployCost()}),a},totalMitigation:function(){var a=0,b=this.mods.modMitigation(),c=this.links.linkMitigation();return a=b+c,a>95&&(a=95),a},applyMitigation:function(a){return a*(100-this.totalMitigation())/100},getPortalEnergy:function(){var a=0;return this.resos.each(function(b){var c=b.get("energyTotal");a+=c}),a},getPortalEnergyMax:function(){var a=0;return this.resos.each(function(b){var c=reso_capacity[b.get("level")];a+=c}),a},portalRange:function(){var a=160*Math.pow(this.get("exactlevel"),4);return a},portalRangeText:function(){var a=Math.round(this.portalRange());return a>1e3?Math.round(a/100)/10+" km":Math.round(this.portalRange())+" m"},reset:function(){this.set({rechargeXMused:0,totalRechargeXMused:0}),this.loadFromConfigHash(this.get("config"))}}),Position=Backbone.Model.extend({defaults:{x:0,y:0},initialize:function(){_.bindAll(this,"update")},update:function(a,b,c){var d=a.currentTarget;if("undefined"==typeof d.offsetX||"undefined"==typeof d.offsetY){var e=$(d).offset();d.offsetX=e.left,d.offsetY=e.top}b-=d.offsetX,c-=d.offsetY,this.set({x:b,y:c},{silent:!0})}}),Prediction=Backbone.Model.extend({model:Attack,defaults:{state:!1,maxDamage:0,maxX:0,maxY:0},initialize:function(){}}),Resonator=Backbone.Model.extend({defaults:{distanceToPortal:35,energyTotal:1e3,level:1},getMaxEnergy:function(){return reso_capacity[this.get("level")]},getPercentage:function(){return Math.round(1e3*this.get("energyTotal")/this.getMaxEnergy())/10},isDead:function(){return 0==this.get("energyTotal")},isFull:function(){return this.get("energyTotal")==this.getMaxEnergy()},needsEnergy:function(){return!(this.isDead()||this.isFull())},charge:function(a){var b=this.get("energyTotal"),c=this.getMaxEnergy(),d=0;return b+a>c?(d=a+b-c,b=c):(b+=a,d=0),this.set("energyTotal",b),d}}),ResonatorCollection=Backbone.Collection.extend({model:Resonator,initialize:function(){for(var a=0;8>a;a++)this.add({})}});