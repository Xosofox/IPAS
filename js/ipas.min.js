var Attack=Backbone.Model.extend({defaults:{x:0,y:0,level:1,damageTotal:0,simulate:false,show:true,damagePerResonator:[],energyPortal:0,energyPortalMax:0},initialize:function(){_.bindAll(this,"calculate","attack")},attack:function(){this.calculate()},calculate:function(){var b=this;var a=[];this.set("damagePerResonator",a);var c=attackSetup.get("formula");_.each(resonatorViews,function(o,h){var d=b.get("level");var l=o.model.get("energyTotal");var n=Math.sqrt(Math.pow(b.get("x")-o.raphaElement.attr("cx"),2)+Math.pow(b.get("y")-o.raphaElement.attr("cy"),2));var g=pixInM(n);var e=burster_range[d-1];var j=burster_damage[d-1];var k=DAMAGE_FUNCTIONS[c].func(g,e,j,d);k=portal.applyMitigation(k);l=o.model.get("energyTotal");if(l>0){if(l>k){l-=k}else{k=l;l=0}}else{k=0}var f=reso_capacity[o.model.get("level")];a[h]={};a[h].damage=k;a[h].percent=k/f;b.attributes.damageTotal+=k;b.attributes.energyPortal+=l;b.attributes.energyPortalMax+=f});if(!this.get("simulate")){this.doDamage()}if(this.get("show")){attackDamageView.setModel(this);attackDamageView.render()}},doDamage:function(){var a=this.get("damagePerResonator");_.each(resonatorViews,function(b,c){var e=b.model.get("energyTotal");var d=a[c].damage;if((e>0)&&(a[c].damage>0)){b.model.set("energyTotal",e-d)}})}});var AttackCollection=Backbone.Collection.extend({model:Attack,bursterCost:function(){var a=0;this.each(function(c,d){var b=c.get("level");a+=burster_cost[b-1]});return a}});var AttackSetup=Backbone.Model.extend({defaults:{level:1,formula:"graphracer",predict:false,heatmap:false}});var Hit=Backbone.Model.extend({defaults:{level:0,critical_hit:false,distance:40,target_destroyed:false,damage:0,energy:3000,portal_mitigation:[]},getTotalMitigation:function(){var c=0;var b=this.get("portal_mitigation");for(var a=0;a<4;a++){m=b[a];if(m===null){m=0}c+=m}return c}});var HitCollection=Backbone.Collection.extend({model:Hit});var Link=Backbone.Model.extend({defaults:{distance:1,active:true,isOrigin:true},initialize:function(a){this.set("distance",a);if(a<0){this.set("isOrigin",false)}}});var LinkCollection=Backbone.Collection.extend({model:Link,initialize:function(){_.bindAll(this,"linkMitigation")},checkLinkSupport:function(){var b=portal.countResos();var a=portal.portalRange();this.each(function(c){if((b>=3)&&(c.get("distance")<a)){c.set("active",true)}else{c.set("active",false)}});return this},linkMitigation:function(){return Math.round(4/9*Math.atan((this.countIncoming()+this.countOutgoing())/Math.E)*100)},getHash:function(){return this.pluck("distance").join(",")},getIncoming:function(){var a=this.filter(function(b){return((b.get("distance")<0)&&(b.get("active")))});return a},countIncoming:function(){return this.getIncoming().length},getOutgoing:function(){return this.filter(function(a){return((a.get("distance")>0)&&(a.get("active")))})},countOutgoing:function(){return this.getOutgoing().length}});var Mod=Backbone.Model.extend({defaults:{modCode:"-",mitigation:0,modType:"-",rarity:"-"},initialize:function(a){this.bind("modCode:change",function(){this});if(typeof a!=="undefined"){a="-"}this.setModCode(a)},cycle:function(){var a=_.indexOf(MODS_AVAILABLE,this.get("modCode"));a++;a=a%MODS_AVAILABLE.length;var b=MODS_AVAILABLE[a];console.log(b);if(b.charAt(0)!="s"){b="-"}this.setModCode(b)},setModCode:function(d){this.set("modCode",d);if(d=="-"){this.set({mitigation:0,modType:"-",rarity:"-"})}else{var b=d.charAt(0);var c=d.charAt(1);var a=0;if(b=="s"){a=parseInt(d.substr(2),10)}this.set({mitigation:a,modType:b,rarity:c})}},getDeployCost:function(){return MOD_DEPLOY_COST[this.get("rarity")]}});var ModCollection=Backbone.Collection.extend({model:Mod,initialize:function(){_.bindAll(this,"mitigations","modMitigation");for(var a=0;a<4;a++){this.add({})}},mitigations:function(){return this.pluck("mitigation")},modMitigation:function(){var a=0;var c=this.mitigations();for(var b=0;b<4;b++){a+=c[b]}return a},getHash:function(){return this.pluck("modCode").join(",")}});var Optimizer=Backbone.Model.extend({defaults:{x:0,y:0,matrix:{}},optimize:function(){},getDamage:function(a,b){},setDamage:function(b,c,a){},calculateSurroundings:function(){},show:function(){player.set({x:this.get("x"),y:this.get("y")});playerView.show()}});var Player=Backbone.Model.extend({defaults:{x:0,y:0}});var Portal=Backbone.Model.extend({resonators:{},mods:{},links:{},level:{},defaults:{decayDays:0,level:1,exactlevel:1,rechargeXMused:-1,totalRechargeXMused:0},initialize:function(){_.bindAll(this,"reposition","applyPreset","saveConfig","reset","recharge","fill","applyMitigation","portalRange");this.set("resonators",new ResonatorCollection());this.set("mods",new ModCollection());this.set("links",new LinkCollection());this.resonators=this.get("resonators");this.mods=this.get("mods");this.links=this.get("links");this.listenTo(this.resonators,"add change",this.reposition);this.saveConfig()},reposition:function(){var b=0;var a=this.resonators.filter(function(c){return c.get("energyTotal")>0});_.each(a,function(c){b+=c.get("level")});b=b/8;this.set("exactlevel",b);this.set("level",b>=1?Math.floor(b):1);this.links.checkLinkSupport()},decay:function(){this.reset();var b=this.get("decayDays");var a=DECAY_RATE*b;this.resonators.each(function(c){c.set("energyTotal",c.get("energyTotal")-c.getMaxEnergy()*a)})},applyPreset:function(c){if(c in PRESETS){var b=PRESETS[c];var a=b.resonators;this.resonators.each(function(f,d){f.set(a[d])})}else{alert("Could not find preset "+c)}this.commit()},loadFromConfigHash:function(i){var c;if(i.indexOf("|")>=0){alert("Looks like you are using an old version of the IITC IPAS plugin - please make sure to update your user scripts");c=i.split("|");c[2]=""}else{c=i.split("/")}var b=c[0];var f=c[1];var d=c[2];var g={c:"sc10",r:"sr20",v:"sv30"};var h=b.split(";");_.each(h,function(l,k){var j=l.split(",");resonators.at(k).set({level:parseInt(j[0],10),distanceToPortal:parseInt(j[1],10),energyTotal:parseInt(j[2],10)})});var e=f.split(",");_.each(e,function(k,j){k=(k==="0")?"-":k;if(k in g){k=g[k]}this.mods.at(j).setModCode(k)},this);var a=d.split(",");this.links.reset();_.each(a,function(k,j){this.links.add(new Link(k))},this);this.saveConfig()},getConfigHash:function(){var a=[];this.resonators.each(function(b){a.push(b.get("level")+","+b.get("distanceToPortal")+","+b.get("energyTotal"))});return a.join(";")+"/"+this.get("mods").getHash()+"/"+this.get("links").getHash()},saveConfig:function(){this.set("config",this.getConfigHash())},countResos:function(){return _.reduce(this.resonators.pluck("energyTotal"),function(b,a){if(a>0){b++}return b},0)},fill:function(){this.resonators.each(function(a){if(a.get("energyTotal")>0){a.set("energyTotal",a.getMaxEnergy())}})},commit:function(){this.fill();this.saveConfig();this.decay()},recharge:function(){var b=[];this.resonators.each(function(g,f){if(g.needsEnergy()){b.push(f)}});var a=0;if(b.length>0){var e=Math.round(1000/b.length);_.each(b,function(f){a+=this.resonators.at(f).charge(e)})}else{a=1000}var d=1000-a;this.set("rechargeXMused",d);var c=this.get("totalRechargeXMused");c+=d;var c=this.set("totalRechargeXMused",c)},deployCost:function(){var a=0;this.resonators.each(function(d,c){var b=d.get("level");if(b>=1){a+=reso_deploy_cost[b-1]}});this.mods.each(function(c,b){a+=c.getDeployCost()});return a},totalMitigation:function(){var b=0;var a=this.mods.modMitigation();var c=this.links.linkMitigation();b=a+c;if(b>95){b=95}return b},applyMitigation:function(a){return a*(100-this.totalMitigation())/100},getPortalEnergy:function(){var a=0;this.resos.each(function(c){var b=c.get("energyTotal");a+=b});return a},getPortalEnergyMax:function(){var a=0;this.resos.each(function(c){var b=reso_capacity[c.get("level")];a+=b});return a},portalRange:function(){var a=160*Math.pow(this.get("exactlevel"),4);return a},portalRangeText:function(){return Math.round(this.portalRange())+" m"},reset:function(){this.set({rechargeXMused:0,totalRechargeXMused:0});this.loadFromConfigHash(this.get("config"))}});var Position=Backbone.Model.extend({defaults:{x:0,y:0},initialize:function(){_.bindAll(this,"update")},update:function(b,a,f){var c=b.currentTarget;if(typeof c.offsetX==="undefined"||typeof c.offsetY==="undefined"){var d=$(c).offset();c.offsetX=d.left;c.offsetY=d.top}a=a-c.offsetX;f=f-c.offsetY;this.set({x:a,y:f},{silent:true})}});var Prediction=Backbone.Model.extend({model:Attack,defaults:{state:false,maxDamage:0,maxX:0,maxY:0},initialize:function(){}});var Resonator=Backbone.Model.extend({defaults:{distanceToPortal:35,energyTotal:1000,level:1},getMaxEnergy:function(){return reso_capacity[this.get("level")]},getPercentage:function(){return Math.round(1000*this.get("energyTotal")/this.getMaxEnergy())/10},isDead:function(){return(this.get("energyTotal")==0)},isFull:function(){return(this.get("energyTotal")==this.getMaxEnergy())},needsEnergy:function(){return(!(this.isDead()||this.isFull()))},charge:function(c){var d=this.get("energyTotal");var b=this.getMaxEnergy();var a=0;if(d+c>b){a=c+d-b;d=b}else{d+=c;a=0}this.set("energyTotal",d);return a}});var ResonatorCollection=Backbone.Collection.extend({model:Resonator,initialize:function(){for(var a=0;a<8;a++){this.add({})}}});var AttackDamageView=Backbone.View.extend({model:Attack,initialize:function(){_.bindAll(this,"render");paper.setStart();this.dmgViews=[];for(var b=0;b<8;b++){var a=paper.text(40,20*b,"0%");a.attr("font-size","16pt");a.attr("fill","#e00");this.dmgViews[b]=a}this.dmgViewElements=paper.setFinish();this.dmgViewElements.attr("opacity",0)},setModel:function(a){this.model=a},render:function(){this.dmgViewElements.stop();_.each(resonatorViews,function(b,d){var e=xyForResoDistance(b.model.get("distanceToPortal")+8,directions[d]);var c=Math.round(this.model.attributes.damagePerResonator[d].percent*1000)/10;if(c>0){this.dmgViews[d].attr("x",e.x).attr("y",e.y).attr("text",c+"%").attr("opacity",1)}else{this.dmgViews[d].attr("opacity",0)}},this);var a=Raphael.animation({opacity:0},400);this.dmgViewElements.animate(a.delay(3000))}});var AttackInfoView=Backbone.View.extend({events:{mouseover:"showPosition",mouseout:"hidePosition"},showPosition:function(){playerView.model.set({x:this.model.get("x"),y:this.model.get("y")});playerView.render();attackDamageView.setModel(this.model);attackDamageView.render()},hidePosition:function(){playerView.hide()},render:function(){var f=this.model.get("level");var c="";c+=('<span style="color: '+level_color[f]+'">L'+f+"</span> ");var e=this.model.get("damageTotal");var d=this.model.get("energyPortal");var b=this.model.get("energyPortalMax");var a=Math.round(d/b*1000)/10;c+="Dmg: "+Math.round(e/1000*10)/10+"K, Portal: "+Math.round(d/1000*10)/10+"K/"+b/1000+"K ("+a+"%)";this.$el.html(c);return this}});var AttackListView=Backbone.View.extend({initialize:function(){_.bindAll(this,"addOne","render");this.listenTo(this.collection,"add",this.addOne);this.listenTo(this.collection,"reset",this.render)},addOne:function(a){var b=new AttackInfoView({model:a});this.$el.append(b.render().el)},render:function(){this.$el.html("");this.collection.each(function(a,b){this.addOne(a)})}});var AttackSetupView=Backbone.View.extend({model:AttackSetup,initialize:function(){this.listenTo(this.model,"change",this.render);var b="";b+='Select Burster: <select id="bursterlevel" class="bursterSelector" name="burster">';for(var a=1;a<=8;a++){b+='<option value="'+a+'">Burster Level '+a+"</option>"}b+="</select><br />";b+='Select Formula: <select id="damageformula" class="formulaSelector" name="formula">';_.each(DAMAGE_FUNCTIONS,function(e,d){b+='<option value="'+d+'">'+e.title+"</option>"});b+="</select> ";b+='<span id="dmggraph">-</span><br />';b+='<a id="formulasource" href="">... as seen here</a><br />';b+='<input type="checkbox" id="heatmapcheck"><label for="heatmapcheck">Show heatmap (takes time!!!)</label>';this.$el.html(b);var c=this.model.get("formula");$("#damageformula",this.el).val(c);$("#formulasource").attr("href",DAMAGE_FUNCTIONS[c].url);this.updateSparkline()},events:{"change .bursterSelector":"attacklevel","change .formulaSelector":"attackformula","change #heatmapcheck":"heatmap"},heatmap:function(a){var b=$(a.currentTarget).is(":checked");this.model.set("heatmap",b)},attacklevel:function(a){var b=$(a.currentTarget).val();this.model.set("level",b);$("#bursterlevel").val(b);this.updateSparkline()},attackformula:function(a){var b=$(a.currentTarget).val();this.model.set("formula",b);$("#damageformula").val(b);$("#formulasource").attr("href",DAMAGE_FUNCTIONS[b].url);this.updateSparkline()},updateSparkline:function(){var c=[];var g=this.model.get("formula");var e=this.model.get("level");var d=burster_range[e-1];var b=burster_damage[e-1];var h=DAMAGE_FUNCTIONS[g].func;for(var a=0;a<d;a++){c.push([a,h(a,d,b,e)])}$("#dmggraph").sparkline(c,{width:150})},render:function(){}});var AttackSummaryView=Backbone.View.extend({initialize:function(){_.bindAll(this,"render");this.listenTo(this.collection,"add change reset",this.render);this.render()},events:{"click .reset":"reset"},render:function(){var e=[];for(var c=0;c<8;c++){e[c]=0}_.each(this.collection.pluck("level"),function(b){e[b-1]++});var d=[];for(var c=0;c<8;c++){var a=e[c];if(a>0){d.push(a+'x <span style="color:'+level_color[c+1]+'">L'+(c+1)+"</span>")}}this.$el.html(d.join(", ")+' <span style="cursor: pointer" class="reset">Reset</span>');if(d.length>0){this.$el.append('<br />Firing Cost: <span id="bursterCostXM">'+this.collection.bursterCost()+" XM</span>")}},reset:function(){this.collection.reset();portal.reset()}});var BursterRangeView=Backbone.View.extend({initialize:function(){_.bindAll(this,"render","show","hide");this.raphael=paper.circle(0,0,mInPx(42)).hide();border.mouseover(this.show);border.mouseout(this.hide);border.mousemove(this.render);this.listenTo(attackSetup,"change level",this.range)},range:function(){var a=attackSetup.get("level");this.raphael.attr("r",mInPx(burster_range[a-1]))},hide:function(){this.raphael.hide()},show:function(){this.raphael.show()},render:function(){var a=position.get("x");var b=position.get("y");this.raphael.attr({cx:a,cy:b})}});var DamageHeatMapView=Backbone.View.extend({model:AttackSetup,collection:AttackCollection,initialize:function(){_.bindAll(this,"render","createDataset");this.listenTo(this.model,"change",this.check);this.listenTo(attacks,"add",this.check)},check:function(b){if(this.model.get("heatmap")){setTimeout(this.render,0)}else{this.$el.hide()}},createDataset:function(){var h=this.model.get("level");for(var e=0;e<=height;e+=9){for(var b=(e%18==0)?0:5;b<=width;b+=10){var g=new Attack({x:b,y:e,level:h,simulate:true,show:false});g.calculate();this.collection.add(g)}}var f=[];var a=0;var d=100000;this.collection.each(function(k,l){var p=k.get("level");var o=k.get("damageTotal");var j=k.get("x");var n=k.get("y");a=Math.max(a,o);d=Math.min(d,o);f.push({x:j,y:n,count:o})});this.collection.each(function(j,k){f[k].count-=d});var c={max:a-d,data:f};return c},render:function(){this.$el.html("").show();this.collection.reset();var a={element:this.el,radius:6,gradient:{0.35:"rgb(0,0,255)",0.5:"rgb(0,255,0)",0.6:"yellow",0.7:"rgb(255,100,0)",0.75:"rgb(255,0,0)",1:"rgb(255,0,0)"},opacity:50};var c=h337.create(a);var b=this.createDataset();c.store.setDataSet(b)}});var LinkInfoView=Backbone.View.extend({tagName:"div",className:"linkInfo",collection:LinkCollection,initialize:function(a){this.listenTo(this.collection,"add remove change",this.render);this.template=_.template(LinkTemplate);this.$el.html(this.template());this.render()},events:{"click .inLink-up":"incIncomingLinks","click .inLink-down":"decIncomingLinks","click .outLink-up":"incOutgoingLinks","click .outLink-down":"decOutgoingLinks"},incIncomingLinks:function(){this.collection.add(new Link(-1))},decIncomingLinks:function(){if(this.collection.countIncoming()>0){var a=this.collection.getIncoming();var b=a[0];this.collection.remove(b)}},incOutgoingLinks:function(){if(this.collection.countOutgoing()<8){this.collection.add(new Link(1))}},decOutgoingLinks:function(){if(this.collection.countOutgoing()>0){var a=this.collection.getOutgoing();var b=a[0];this.collection.remove(b)}},render:function(){$("#numLinksIncoming").text(this.collection.countIncoming());$("#numLinksOutgoing").text(this.collection.countOutgoing()+"/8");$("#linkMitigation").text(this.collection.linkMitigation());return this}});var LinkTemplate='Number of links:    <div style="position: relative; height: 40px; margin-bottom: 10px">        <div style="position: absolute">Incoming:</div>        <div style="position: absolute; left: 80px" id="numLinksIncoming">0</div>        <div style="width: 15px; position: absolute; left: 95px">            <div class="arrow-up inLink-up" title="One more incoming link"></div>            <div class="arrow-down inLink-down" title="One less incoming link"></div>        </div>        <div style="position: absolute; left: 140px">Outgoing:</div>        <div style="position: absolute; left: 210px" id="numLinksOutgoing">0/8</div>        <div style="width: 15px; position: absolute; left: 235px">            <div class="arrow-up outLink-up" title="One more outgoing link"></div>            <div class="arrow-down outLink-down" title="One less outgoing link"></div>        </div>        <br />    Link mitigation: <span id="linkMitigation">0</span><br />    </div>';var ModList=Backbone.View.extend({collection:ModCollection,initialize:function(){this.listenTo(this.collection,"change",this.render);this.render()},events:{},render:function(){var a=$("<tr></tr>");this.collection.each(function(c){var b=new ModView({model:c});b.render();a.append(b.el)});this.$el.html(a);$("#modMitigation").text(this.collection.modMitigation())}});var ModView=Backbone.View.extend({tagName:"td",className:"modInfoCell",model:Mod,initialize:function(a){this.template=_.template(ModTemplate)},events:{click:"cycle"},cycle:function(){this.model.cycle()},render:function(){var a=this.model.toJSON;a.title=MOD_TYPES[this.model.get("modType")];if(this.model.get("modType")!="-"){a.title+=" ("+MOD_RARITIES[this.model.get("rarity")]+")"}a.color=MOD_RARITY_COLOR[this.model.get("rarity")];this.$el.html(this.template(a));return this}});var ModTemplate='<td align="center" style="height: 60px; width: 60px; border: 1px solid white">        <span style="font-size: 8pt; color: <%- color %>"><%- title %></span></td>        ';var PlayerView=Backbone.View.extend({model:Player,initialize:function(){_.bindAll(this,"render","show","hide");this.width=28;this.height=34;this.raphael=paper.image("images/player.png",0,0,this.width,this.height);this.offsetX=this.width/2;this.offsetY=this.height/2;this.hide()},hide:function(){this.raphael.hide()},show:function(){this.raphael.show()},render:function(){var a=this.model.get("x")-this.offsetX;var b=this.model.get("y")-this.offsetY;this.raphael.animate({x:a,y:b}).show().toFront()}});var PortalInfoView=Backbone.View.extend({model:Portal,initialize:function(){this.listenTo(this.model,"change",this.render);var a="";a+='<span id="portallevel" style="font-size: 14pt; color: #fff">0</span><br />';a+='Preconfigure Resos: <select id="preset" class="presetSelect" name="preset">';_.each(PRESETS,function(c,b){a+='<option value="'+b+'">'+c.title+"</option>"});a+="</select><br />";a+='<label for="decay">Decayed (<span id="decayDays">0</span> days)</label><br />';a+='<input type="range" step="1" min="0" max="7" id="decay" class="decaySelector" value="0" /><br />';a+='<label for="equidistant">All resos same distance:</label> <input type="checkbox" id="equidistant" checked="checked"><br />';a+='<label for="lockresos">Lock reso positions:</label> <input type="checkbox" id="lockresos"><br />';this.$el.html(a);this.portallevel=$("#portallevel",this.$el);this.render()},events:{"change .presetSelect":"preconfigure","change .decaySelector":"decay","change #equidistant":"switchEquidistant","change #lockresos":"switchLockresos"},preconfigure:function(a){var b=$(a.currentTarget).val();this.model.applyPreset(b)},decay:function(a){days=$(a.currentTarget).val();$("#decayDays").text(days);this.model.set("decayDays",days).decay()},switchEquidistant:function(){EQUIDISTANT=!EQUIDISTANT},switchLockresos:function(b){var a=$(b.currentTarget).is(":checked");if(a){portalElements.toBack()}else{portalElements.toFront()}},render:function(){var a=this.model.get("level");this.portallevel.text(a).css("color",level_color[a])}});var PortalStatsView=Backbone.View.extend({model:Portal,initialize:function(){this.listenTo(this.model,"change",this.render);this.listenTo(this.model.mods,"add remove change",this.render);this.listenTo(this.model.links,"add remove change",this.render);this.template=_.template(PortalStatsTemplate);this.$el.html(this.template());this.render()},render:function(){var a=this.model.totalMitigation();var b=a;if(a==95){b+=" (max)"}$("#totalMitigation").text(b);$("#portalRange").text(this.model.portalRangeText())}});var PortalStatsTemplate='    Total mitigation: <span id="totalMitigation">0</span><br />    Supported link length: <span id="portalRange">0</span><br />';var PredictionSetupView=Backbone.View.extend({model:Prediction,initialize:function(){var a="";a+='<input type="checkbox" id="predictioncheck"><label for="predictioncheck">Predict damage % while hovering</label>';a+="<br />";this.$el.html(a);_.bindAll(this,"switchprediction","predictDamage");var b=this;border.mouseover(function(){if(b.model.get("state")){b.interval=setInterval(b.predictDamage,200)}});border.mouseout(function(){if(b.interval){clearInterval(b.interval)}})},events:{"change #predictioncheck":"switchprediction",},switchprediction:function(b){var a=$(b.currentTarget).is(":checked");this.model.set("state",a)},predictDamage:function(){var a=position.get("x");var b=position.get("y");this.predictedAttack=new Attack({x:a,y:b,level:attackSetup.get("level"),simulate:true});this.predictedAttack.attack()}});var ResonatorDetailList=Backbone.View.extend({initialize:function(){this.render();this.listenTo(portal,"change:rechargeXMused change:totalRechargeXMused",this.showRechargeXM);this.listenTo(portal.mods,"change",this.showDeployCost);this.listenTo(portal.resonators,"change",this.showDeployCost)},collection:ResonatorCollection,events:{"click #recharge":"portalrecharge"},portalrecharge:function(){portal.recharge()},showRechargeXM:function(){$("#rechargeXMused").text(Math.round(portal.get("rechargeXMused")));$("#totalRechargeXMused").text(Math.round(portal.get("totalRechargeXMused")))},showDeployCost:function(){$("#deployCostXM").text(portal.deployCost())},render:function(){var b;var a=this;_.each([2,1,3,0,4,7,5,6],function(d,c){var f=a.collection.at(d);if((c%2)==0){b=$("<tr></tr>");a.$el.append(b)}var e=new ResonatorDetailView({model:f,position:directions[d]});e.render();b.append(e.el)});this.$el.append('<tr><td colspan="2">Deploy cost: <span id="deployCostXM">'+portal.deployCost()+"</span> XM</td></tr>");this.$el.append('<tr><td colspan="2"><input type="button" value="Recharge" id="recharge">XM (last/total): <span id="rechargeXMused">0</span>/<span id="totalRechargeXMused">0</span></td></tr>')}});var ResonatorDetailView=Backbone.View.extend({tagName:"td",className:"resoInfoCell",model:Resonator,position:"N",initialize:function(a){this.listenTo(this.model,"change",this.render);this.template=_.template(ResonatorDetailViewTemplate)},events:{"click .level-up":"incLevel","click .level-down":"decLevel","click .distance-up":"incDist","click .distance-down":"decDist","mouseover .resoLevel":"highlight","mouseout .resoLevel":"unhighlight"},incLevel:function(){var a=this.model.get("level");if(a<8){this.model.set({level:a+1,energyTotal:1})}portal.commit()},decLevel:function(){var a=this.model.get("level");if(a<=0){return false}if(a==1){this.model.set("energyTotal",0);this.model.set("level",0)}else{this.model.set("level",a-1)}portal.commit()},incDist:function(){var a=this.model.get("distanceToPortal");if(a<40){a++;if(EQUIDISTANT){resonators.invoke("set",{distanceToPortal:a})}else{this.model.set("distanceToPortal",a)}}},decDist:function(){var a=this.model.get("distanceToPortal");if(a>1){a--;if(EQUIDISTANT){resonators.invoke("set",{distanceToPortal:a})}else{this.model.set("distanceToPortal",a)}}},highlight:function(a){this.model.set("highlight",true)},unhighlight:function(a){this.model.set("highlight",false)},render:function(){var c=this.model.get("level");var a=this.model.getPercentage();if(a<=0){a=0.1}var b=this.model.toJSON();b.perc=a;b.levelcolor=level_color[c];if(this.model.get("highlight")){b.highlightclass="highlight"}else{b.highlightclass=""}this.$el.html(this.template(b));return this}});var ResonatorDetailViewTemplate='        <div class="resoInfo <%- highlightclass  %>" style="position: relative; height: 30px; margin: 2px">            <div class="resoLevel" style="position: absolute; left: 0px; width: 60px; border: 1px solid gray">                <span style="width: <%- perc %>%; background-color: <%- levelcolor %>; display: block" >&nbsp;</span>            </div>            <div style="position: absolute; left:27px ; top:0; z-index: 20; color: <% if (level <3) { %>#000000<% } else { %>white<% } %>"><%- level %></div>            <div style="position: absolute; left: 65px">                <div class="arrow-up level-up" title="Level up"></div>                <div class="arrow-down level-down" title="Level down"></div>            </div>            <div style="position: absolute; left:92px" class="distance"><%- distanceToPortal %>m</div>            <div style="position: absolute; left: 123px">                <div class="arrow-up distance-up" title="Distance up"></div>                <div class="arrow-down distance-down" title="Distance down"></div>            </div>        </div>        ';var ResonatorView=Backbone.View.extend({model:Resonator,initialize:function(a){this.raphaElement=paper.circle(portalX,portalY,RESO_RADIUS);this.raphaElementTxt=paper.text(portalX,portalY,"1").attr("pointer-events","none");this.raphaElement.drag(function(d,c,b,h,g){var f=this.raphaElement;f.cx=f.ox+d;f.cy=f.oy+c},function(){var b=this.raphaElement;b.ox=b.attr("cx");b.oy=b.attr("cy");var c=this;this.dragInterval=setInterval(function(){if(typeof b.cx!=="undefined"){var e=Math.round(distanceToPortalForXY(b.cx,b.cy));e=e>MAX_RESO_RANGE?MAX_RESO_RANGE:e;if(EQUIDISTANT){resonators.invoke("set",{distanceToPortal:e})}else{c.model.set("distanceToPortal",e)}portal.commit()}},100)},function(b){clearInterval(this.dragInterval)},this,this,this);this.setElement(this.raphaElement.node);this.delegateEvents(this.events);this.listenTo(this.model,"change",this.render)},events:{},render:function(){if(this.model.get("highlight")){this.raphaElement.attr("r",RESO_RADIUS*2)}else{this.raphaElement.attr("r",RESO_RADIUS)}if(this.model.get("energyTotal")<=0){this.raphaElement.hide();this.raphaElementTxt.hide()}else{this.raphaElement.show();this.raphaElementTxt.show();var a=xyForResoDistance(this.model.get("distanceToPortal"),this.options.position);var b=this.model.get("level");this.raphaElement.animate({cx:a.x,cy:a.y,fill:level_color[b],text:b}).toFront();this.raphaElementTxt.animate({x:a.x,y:a.y}).attr("text",b).toFront()}return this}});